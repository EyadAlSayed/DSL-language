parser grammar DSLParser;

options { tokenVocab=DSLLexer; }

dslDocument:
    pageStructure space
   |controllerDef
   ;


//CAESAR
pageStructure: PAGE WHITE_SPACE* FILE_NAME_ID space OPEN_CURLY_BRACKT_ID space body? CLOSE_CURLY_BRACKT_ID;
headerStructure: TITLE OPEN_BRACES TEXT CLOSE_BRACES;

body : bodyAttributes WHITE_SPACE*;
bodyAttributes :(
        WHITE_SPACE* headerStructure WHITE_SPACE* NEWLINE
        | WHITE_SPACE* text WHITE_SPACE* NEWLINE
        | WHITE_SPACE* textField WHITE_SPACE* NEWLINE
        )*;

text : TEXT_DEF_ID OPEN_BRACES FILE_NAME_ID WHITE_SPACE* (COMMA WHITE_SPACE* TEXT)? WHITE_SPACE* CLOSE_BRACES;
//pageStructure: PAGE WHITE_SPACE** FILE_NAME_ID space headerStructure space body?  space END_PAGE;



controllerDef:  CONTROLLER_DEF WHITE_SPACE* FILE_NAME_ID WHITE_SPACE* CONTROLLER_METHOD WHITE_SPACE* FILE_NAME_ID space
                OPEN_CURLY_BRACKT_ID space controllerTokens+ space CLOSE_CURLY_BRACKT_ID;

textField: TEXT_FIELD OPEN_BRACES FILE_NAME_ID WHITE_SPACE* (COMMA WHITE_SPACE* TEXT)? (COMMA WHITE_SPACE* textFieldAttribute)? WHITE_SPACE* CLOSE_BRACES;
controllerTokens:
          ifStatment
          |print
          |assign
          |mathEquation;

textFieldAttribute: TEXT_AS_PARAMETER | EMAIL_AS_PARAMETER | PASSWORD_AS_PARAMETER | DATE_AS_PARAMETER;

ifStatment:IF_ID WHITE_SPACE* OPEN_PAR_BRACKT_ID WHITE_SPACE* condition+ WHITE_SPACE* CLOSE_PAR_BRACKT_ID space
            OPEN_CURLY_BRACKT_ID space controllerTokens+ space CLOSE_CURLY_BRACKT_ID space;


logicalOperation:AND_OP_ID |OR_OP_ID|EQUAL_OP_ID;
condition:FILE_NAME_ID WHITE_SPACE* logicalOperation WHITE_SPACE*  textValue  WHITE_SPACE* logicalOperation? WHITE_SPACE*;
textValue :  (TEXT |TEXTNUM) ;
space: (NEWLINE+ | WHITE_SPACE)*;
print:PRINT_ACTION WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* END_STATMENT_ID space;
assign:FILE_NAME_ID WHITE_SPACE* ASSIGN_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* END_STATMENT_ID space;
mathEquation:sum|mult|minus|div|mod;
sum:FILE_NAME_ID WHITE_SPACE* ASSIGN_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* SUM_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* END_STATMENT_ID space;
mult:FILE_NAME_ID WHITE_SPACE* ASSIGN_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* MULT_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* END_STATMENT_ID space;
minus:FILE_NAME_ID WHITE_SPACE* ASSIGN_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* MINUS_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* END_STATMENT_ID space;
div:FILE_NAME_ID WHITE_SPACE* ASSIGN_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* DIV_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* END_STATMENT_ID space;
mod:FILE_NAME_ID WHITE_SPACE* ASSIGN_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* MOD_OP_ID WHITE_SPACE* (textValue|FILE_NAME_ID) WHITE_SPACE* END_STATMENT_ID space;









